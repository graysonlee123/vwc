---
import '../../node_modules/toastify-js/src/toastify.css';
---

<form
  id="contact-form"
>
  <label for="name">Name</label>
  <input
    type="text"
    name="name"
    id="name"
    required
  />
  <label for="email">Email</label>
  <input
    type="email"
    name="email"
    id="email"
    required
  />
  <label for="message">Message</label>
  <textarea
    name="message"
    id="message"
    required
  />
  <button type="submit">Send</button>
</form>

<script>
  import Toastify from 'toastify-js'
  import { PUBLIC_FORMSPREE_FORM_ID } from "astro:env/client"

  type FormspreeResponse = {
    next: string
    ok: boolean
    errors?: FormspreeError[]
  }

  type FormspreeError = {
      message: string
  }

  (() => {
    const form = document.querySelector<HTMLFormElement>('#contact-form')

    if (!form) {
      console.error('Contact form not found.')
      return
    }

    form.addEventListener('submit', async (e) => {
      e.preventDefault()

      const toastifyOptions: Toastify.Options = {
        position: 'center',
        gravity: 'top',
        close: true,
      }

      const successToast = Toastify({
        text: 'Your message has been sent! We will get back to you soon!',
        className: 'toastify-success',
        style: { background: '#047857' },
        ...toastifyOptions,
      })

      const errorToast = Toastify({
        text: 'Oops! There was a problem submitting your form. Please try again.',
        className: 'toastify-error',
        style: { background: '#be123c' },
        ...toastifyOptions,
      })

      const formData = new FormData(form)

      try {
        const response = await fetch(
          `https://formspree.io/f/${PUBLIC_FORMSPREE_FORM_ID}`,
          {
            method: 'POST',
            body: formData,
            headers: {
              Accept: 'application/json',
            },
          }
        )

        const data: FormspreeResponse = await response.json()
        console.log({ data })

        if (!response.ok) {
          if (Object.hasOwn(data, 'errors') && data.errors) {
            throw new Error(data.errors.map(error => error["message"]).join(", "))
          }

          throw new Error('Oops! There was a problem submitting your form.')
        } else {
          successToast.showToast()
          form.reset()
        }
      } catch (error) {
        console.log({error})

        if (error instanceof Error) {
          errorToast.options.text = error.message
        }

        errorToast.showToast()
      }
    })
  })()
</script>
