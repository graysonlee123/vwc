---
import { Image } from 'astro:assets';

interface Props {
  href: string;
  title?: string;
  imageSrc?: any; // TODO: Proper typing here
  imageAlt?: string;
  buttonText?: string;
  target?: string;
  rel?: string;
  style?: string | astroHTML.JSX.CSSProperties;
}

const {
  title,
  imageSrc,
  imageAlt = '',
  buttonText,
  href,
  target,
  rel,
  style,
} = Astro.props;
---

<a class="card" href={href} target={target} rel={rel} style={style}>
  <h3 class="title">{title}</h3>
  <span class="button">{buttonText}</span>
  {imageSrc && <Image class="image" src={imageSrc} alt={imageAlt} />}
</a>

<style>
  .card {
    position: relative;
    z-index: 0;
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: space-between;
    gap: 3rem;
    padding: 1rem;
    color: #fff;
    text-align: left;
    text-decoration: none;
    background-color: #eee;
    border-radius: 0.75rem;
  }

  .button {
    display: inline-block;
    padding: 0.5rem 1.5rem;
    font-size: var(--font-size--sm);
    color: #fff;
    background-color: hsl(var(--color--white) / 40%);
    backdrop-filter: blur(4px);
    border-radius: 10rem;

    transition-property: transform;
    transition-duration: 300ms;
    transition-timing-function: ease-out;
  }

  .button:hover,
  .button:focus,
  .button:active {
    transform: scale(1.05);
  }

  .card::after {
    content: '';
    position: absolute;
    z-index: -1;
    inset: 0;
    background-image: linear-gradient(
      to bottom,
      hsla(0 0% 0% / 40%) 33%,
      hsla(0 0% 0% / 30%) 45%,
      hsla(0 0% 0% / 10%) 100%
    );
    border-radius: inherit;
  }

  .image {
    position: absolute;
    z-index: -2;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: inherit;
  }

  @media (hover: hover) {
    .card {
      transition-property: transform;
      transition-duration: 300ms;
      transition-timing-function: ease-out;
    }

    .card:hover {
      transform: scale(1.025);
    }

    .image {
      overflow: hidden;
      transition-property: filter;
      transition-duration: 300ms;
      transition-timing-function: ease-out;
    }

    .card:hover .image {
      filter: blur(1px);
    }

    .card::before {
      content: '';
      position: absolute;
      z-index: -3;
      inset: 0;
      border-radius: inherit;
      opacity: 0;
      box-shadow:
        0 4px 8px rgba(0, 0, 0, 0.5),
        0 8px 16px rgba(0, 0, 0, 0.25);
      transition-property: opacity;
      transition-duration: 300ms;
      transition-timing-function: ease-out;
    }

    .card:hover::before {
      opacity: 1;
    }
  }
</style>
